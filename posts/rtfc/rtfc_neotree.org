Today we analysis the [[https://github.com/jaypei/emacs-neotree][emacs-neotree]]


#+BEGIN_SRC  emacs-lisp
;; 提供emacs-24.3的功能给之前的版本
(require 'cl-lib)

;; 定义变量
(defconst neo-buffer-name " *NeoTree*"
  "Name of the buffer where neotree shows directory contents.")
  

;; 注意这里的load-file-name和default-directory用help-variable无法查看，但是用
;; (message xxx)可以查看到值
(defconst neo-dir
 (expand-file-name (if load-file-name
                       (file-name-directory load-file-name)
                     default-directory)))

;; explain defmacro
;; explain list
;; 通用做法，向后兼容
(unless (fboundp 'defvar-local)
  (defmacro defvar-local (var val &optional docstring)
    "Define VAR as a buffer-local variable with default value VAL.
Like `defvar' but additionally marks the variable as being automatically
buffer-local wherever it is set."
    (declare (debug defvar) (doc-string 3))
    (list 'progn (list 'defvar var val docstring)
          (list 'make-variable-buffer-local (list 'quote var))))))
#+END_SRC


** explain defmacro
defmacro 的body是一个list。之后对name的调用，会evaluate这个list
   
* 顺推 neotree-toggle
#+BEGIN_SRC  emacs-lisp
(defun neotree-show ()
  "Show the NeoTree window."
  (interactive)
  (let ((cw (selected-window))
        (path (buffer-file-name)))  ;; save current window and buffer
    (if neo-smart-open
        (progn
          (when (and (fboundp 'projectile-project-p)
                     (projectile-project-p)
                     (fboundp 'projectile-project-root))
            (neotree-dir (projectile-project-root)))
          (neotree-find path))
      (neo-global--open))
    (neo-global--select-window)
    (when neo-toggle-window-keep-p
      (select-window cw))))
;; if project find, neotree-dir
#+END_SRC
